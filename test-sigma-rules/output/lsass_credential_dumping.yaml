detect:
  event: SENSITIVE_PROCESS_ACCESS
  op: and
  rules:
  - op: is windows
  - op: ends with
    path: event/TARGET/FILE_PATH
    value: lsass.exe
    case sensitive: false
  - op: or
    rules:
    - op: is
      path: event/ACCESS_MASK
      value: '0x1038'
    - op: is
      path: event/ACCESS_MASK
      value: '0x1438'
    - op: is
      path: event/ACCESS_MASK
      value: '0x143a'
    - op: is
      path: event/ACCESS_MASK
      value: '0x1fffff'
  - op: or
    rules:
    - op: contains
      path: event/CALL_STACK
      value: dbgcore.dll
      case sensitive: false
    - op: contains
      path: event/CALL_STACK
      value: dbghelp.dll
      case sensitive: false
    - op: contains
      path: event/CALL_STACK
      value: kernel32.dll
      case sensitive: false
    - op: contains
      path: event/CALL_STACK
      value: kernelbase.dll
      case sensitive: false
    - op: contains
      path: event/CALL_STACK
      value: ntdll.dll
      case sensitive: false
  - op: or
    not: true
    rules:
    - op: contains
      path: event/SOURCE/USER_NAME
      value: AUTHORI
      case sensitive: false
    - op: contains
      path: event/SOURCE/USER_NAME
      value: AUTORI
      case sensitive: false
  - op: and
    not: true
    rules:
    - op: and
      rules:
      - op: contains
        path: event/CALL_STACK
        value: :\Windows\Temp\asgard2-agent\
        case sensitive: false
      - op: contains
        path: event/CALL_STACK
        value: \thor\thor64.exe+
        case sensitive: false
      - op: contains
        path: event/CALL_STACK
        value: '|UNKNOWN('
        case sensitive: false
    - op: is
      path: event/ACCESS_MASK
      value: '0x103800'
  - op: ends with
    not: true
    path: event/SOURCE/FILE_PATH
    value: :\Windows\Sysmon64.exe
    case sensitive: false
respond:
- action: report
  name: Potential Credential Dumping via LSASS by {{ .event.SOURCE.FILE_PATH }}
  publish: true
  priority: 3
  metadata:
    author: Samir Bousseaden, Michael Haag
    description: Detects process access requests to the LSASS process with specific
      call trace calls and access masks. This behavior is expressed by many credential
      dumping tools such as Mimikatz, NanoDump, Invoke-Mimikatz, Procdump and even
      the Taskmgr dumping feature.
    references:
    - https://web.archive.org/web/20230329170326/https://blog.menasec.net/2019/02/threat-hunting-21-procdump-or-taskmgr.html
    - https://web.archive.org/web/20230208123920/https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html
    - https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1003.001/T1003.001.md
    - https://research.splunk.com/endpoint/windows_possible_credential_dumping/
    mitre_attack:
    - T1003.001
    - S0002
    level: medium
    status: test
    false_positives:
    - Unknown
    - Legitimate debugging tools
    - Specific security agents (e.g., Thor, Sysmon if not properly filtered)
    tags:
    - attack.credential-access
    - attack.t1003.001
    - attack.s0002
    - windows
    - lsass
    - credential-dumping
- action: task
  command: history_dump
  investigation: lsass-dump-source-process-history
  suppression:
    is_global: false
    keys:
    - '{{ .event.SOURCE.PROCESS_ID }}'
    - lsass-dump-history-dump
    max_count: 1
    period: 10m
- action: task
  command: yara_scan hive://yara/credential-dumping-signatures --pid "{{ .event.SOURCE.PROCESS_ID
    }}"
  investigation: lsass-dump-memory-scan
  suppression:
    is_global: false
    keys:
    - '{{ .event.SOURCE.PROCESS_ID }}'
    - lsass-dump-yara-scan
    max_count: 1
    period: 30m
- action: task
  command: artifact_get --file "{{ .event.SOURCE.FILE_PATH }}" --days-retention 30
  investigation: lsass-dump-artifact-collection
  suppression:
    is_global: false
    keys:
    - '{{ .event.SOURCE.FILE_PATH }}'
    - lsass-dump-artifact-get
    max_count: 1
    period: 1h
- action: add tag
  tag: credential-dumping-detected
  ttl: 3600
  entire_device: false
